{"remainingRequest":"C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\node_modules\\tslint-loader\\index.js!C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\src\\main\\webapp\\app\\account\\register\\register.component.ts","dependencies":[{"path":"C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\src\\main\\webapp\\app\\account\\register\\register.component.ts","mtime":1559806071368},{"path":"C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\node_modules\\tslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nvar _a, _b, _c, _d, _e;\r\nconst core_1 = require(\"@angular/core\");\r\nconst forms_1 = require(\"@angular/forms\");\r\nconst shared_1 = require(\"app/shared\");\r\nconst core_2 = require(\"app/core\");\r\nconst register_service_1 = require(\"./register.service\");\r\nlet RegisterComponent = class RegisterComponent {\r\n    constructor(loginModalService, registerService, elementRef, renderer, fb) {\r\n        this.loginModalService = loginModalService;\r\n        this.registerService = registerService;\r\n        this.elementRef = elementRef;\r\n        this.renderer = renderer;\r\n        this.fb = fb;\r\n        this.registerForm = this.fb.group({\r\n            login: ['', [forms_1.Validators.required, forms_1.Validators.minLength(1), forms_1.Validators.maxLength(50), forms_1.Validators.pattern('^[_.@A-Za-z0-9-]*$')]],\r\n            email: ['', [forms_1.Validators.required, forms_1.Validators.minLength(5), forms_1.Validators.maxLength(254), forms_1.Validators.email]],\r\n            password: ['', [forms_1.Validators.required, forms_1.Validators.minLength(4), forms_1.Validators.maxLength(50)]],\r\n            confirmPassword: ['', [forms_1.Validators.required, forms_1.Validators.minLength(4), forms_1.Validators.maxLength(50)]]\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.success = false;\r\n    }\r\n    ngAfterViewInit() {\r\n        this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector('#login'), 'focus', []);\r\n    }\r\n    register() {\r\n        let registerAccount = {};\r\n        const login = this.registerForm.get(['login']).value;\r\n        const email = this.registerForm.get(['email']).value;\r\n        const password = this.registerForm.get(['password']).value;\r\n        if (password !== this.registerForm.get(['confirmPassword']).value) {\r\n            this.doNotMatch = 'ERROR';\r\n        }\r\n        else {\r\n            registerAccount = Object.assign({}, registerAccount, { login, email, password });\r\n            this.doNotMatch = null;\r\n            this.error = null;\r\n            this.errorUserExists = null;\r\n            this.errorEmailExists = null;\r\n            registerAccount = Object.assign({}, registerAccount, { langKey: 'en' });\r\n            this.registerService.save(registerAccount).subscribe(() => {\r\n                this.success = true;\r\n            }, response => this.processError(response));\r\n        }\r\n    }\r\n    openLogin() {\r\n        this.modalRef = this.loginModalService.open();\r\n    }\r\n    processError(response) {\r\n        this.success = null;\r\n        if (response.status === 400 && response.error.type === shared_1.LOGIN_ALREADY_USED_TYPE) {\r\n            this.errorUserExists = 'ERROR';\r\n        }\r\n        else if (response.status === 400 && response.error.type === shared_1.EMAIL_ALREADY_USED_TYPE) {\r\n            this.errorEmailExists = 'ERROR';\r\n        }\r\n        else {\r\n            this.error = 'ERROR';\r\n        }\r\n    }\r\n};\r\nRegisterComponent = tslib_1.__decorate([\r\n    core_1.Component({\r\n        selector: 'jhi-register',\r\n        templateUrl: './register.component.html'\r\n    }),\r\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof core_2.LoginModalService !== \"undefined\" && core_2.LoginModalService) === \"function\" ? _a : Object, typeof (_b = typeof register_service_1.Register !== \"undefined\" && register_service_1.Register) === \"function\" ? _b : Object, typeof (_c = typeof core_1.ElementRef !== \"undefined\" && core_1.ElementRef) === \"function\" ? _c : Object, typeof (_d = typeof core_1.Renderer !== \"undefined\" && core_1.Renderer) === \"function\" ? _d : Object, typeof (_e = typeof forms_1.FormBuilder !== \"undefined\" && forms_1.FormBuilder) === \"function\" ? _e : Object])\r\n], RegisterComponent);\r\nexports.RegisterComponent = RegisterComponent;\r\n",{"version":3,"file":"C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\src\\main\\webapp\\app\\account\\register\\register.component.ts","sourceRoot":"","sources":["C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\node_modules\\tslint-loader\\index.js!C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\src\\main\\webapp\\app\\account\\register\\register.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, AfterViewInit, Renderer, ElementRef } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { EMAIL_ALREADY_USED_TYPE, LOGIN_ALREADY_USED_TYPE } from 'app/shared';\r\nimport { LoginModalService } from 'app/core';\r\nimport { Register } from './register.service';\r\n\r\n@Component({\r\n  selector: 'jhi-register',\r\n  templateUrl: './register.component.html'\r\n})\r\nexport class RegisterComponent implements OnInit, AfterViewInit {\r\n  doNotMatch: string;\r\n  error: string;\r\n  errorEmailExists: string;\r\n  errorUserExists: string;\r\n  success: boolean;\r\n  modalRef: NgbModalRef;\r\n\r\n  registerForm = this.fb.group({\r\n    login: ['', [Validators.required, Validators.minLength(1), Validators.maxLength(50), Validators.pattern('^[_.@A-Za-z0-9-]*$')]],\r\n    email: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(254), Validators.email]],\r\n    password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]],\r\n    confirmPassword: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]]\r\n  });\r\n\r\n  constructor(\r\n    private loginModalService: LoginModalService,\r\n    private registerService: Register,\r\n    private elementRef: ElementRef,\r\n    private renderer: Renderer,\r\n    private fb: FormBuilder\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.success = false;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector('#login'), 'focus', []);\r\n  }\r\n\r\n  register() {\r\n    let registerAccount = {};\r\n    const login = this.registerForm.get(['login']).value;\r\n    const email = this.registerForm.get(['email']).value;\r\n    const password = this.registerForm.get(['password']).value;\r\n    if (password !== this.registerForm.get(['confirmPassword']).value) {\r\n      this.doNotMatch = 'ERROR';\r\n    } else {\r\n      registerAccount = { ...registerAccount, login, email, password };\r\n      this.doNotMatch = null;\r\n      this.error = null;\r\n      this.errorUserExists = null;\r\n      this.errorEmailExists = null;\r\n      registerAccount = { ...registerAccount, langKey: 'en' };\r\n\r\n      this.registerService.save(registerAccount).subscribe(\r\n        () => {\r\n          this.success = true;\r\n        },\r\n        response => this.processError(response)\r\n      );\r\n    }\r\n  }\r\n\r\n  openLogin() {\r\n    this.modalRef = this.loginModalService.open();\r\n  }\r\n\r\n  private processError(response: HttpErrorResponse) {\r\n    this.success = null;\r\n    if (response.status === 400 && response.error.type === LOGIN_ALREADY_USED_TYPE) {\r\n      this.errorUserExists = 'ERROR';\r\n    } else if (response.status === 400 && response.error.type === EMAIL_ALREADY_USED_TYPE) {\r\n      this.errorEmailExists = 'ERROR';\r\n    } else {\r\n      this.error = 'ERROR';\r\n    }\r\n  }\r\n}\r\n"]}]}