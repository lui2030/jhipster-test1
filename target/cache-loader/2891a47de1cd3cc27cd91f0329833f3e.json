{"remainingRequest":"C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\node_modules\\tslint-loader\\index.js!C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\src\\main\\webapp\\app\\account\\password-reset\\init\\password-reset-init.component.ts","dependencies":[{"path":"C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\src\\main\\webapp\\app\\account\\password-reset\\init\\password-reset-init.component.ts","mtime":1559806071348},{"path":"C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\node_modules\\angular2-template-loader\\index.js","mtime":1486570058000},{"path":"C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\node_modules\\ts-loader\\index.js","mtime":1545640398000},{"path":"C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\node_modules\\angular-router-loader\\src\\index.js","mtime":1512749902000},{"path":"C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\node_modules\\tslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nvar _a, _b, _c, _d;\r\nconst core_1 = require(\"@angular/core\");\r\nconst forms_1 = require(\"@angular/forms\");\r\nconst shared_1 = require(\"app/shared\");\r\nconst password_reset_init_service_1 = require(\"./password-reset-init.service\");\r\nlet PasswordResetInitComponent = class PasswordResetInitComponent {\r\n    constructor(passwordResetInitService, elementRef, renderer, fb) {\r\n        this.passwordResetInitService = passwordResetInitService;\r\n        this.elementRef = elementRef;\r\n        this.renderer = renderer;\r\n        this.fb = fb;\r\n        this.resetRequestForm = this.fb.group({\r\n            email: ['', [forms_1.Validators.required, forms_1.Validators.minLength(5), forms_1.Validators.maxLength(254), forms_1.Validators.email]]\r\n        });\r\n    }\r\n    ngAfterViewInit() {\r\n        this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector('#email'), 'focus', []);\r\n    }\r\n    requestReset() {\r\n        this.error = null;\r\n        this.errorEmailNotExists = null;\r\n        this.passwordResetInitService.save(this.resetRequestForm.get(['email']).value).subscribe(() => {\r\n            this.success = 'OK';\r\n        }, response => {\r\n            this.success = null;\r\n            if (response.status === 400 && response.error.type === shared_1.EMAIL_NOT_FOUND_TYPE) {\r\n                this.errorEmailNotExists = 'ERROR';\r\n            }\r\n            else {\r\n                this.error = 'ERROR';\r\n            }\r\n        });\r\n    }\r\n};\r\nPasswordResetInitComponent = tslib_1.__decorate([\r\n    core_1.Component({\r\n        selector: 'jhi-password-reset-init',\r\n        templateUrl: './password-reset-init.component.html'\r\n    }),\r\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof password_reset_init_service_1.PasswordResetInitService !== \"undefined\" && password_reset_init_service_1.PasswordResetInitService) === \"function\" ? _a : Object, typeof (_b = typeof core_1.ElementRef !== \"undefined\" && core_1.ElementRef) === \"function\" ? _b : Object, typeof (_c = typeof core_1.Renderer !== \"undefined\" && core_1.Renderer) === \"function\" ? _c : Object, typeof (_d = typeof forms_1.FormBuilder !== \"undefined\" && forms_1.FormBuilder) === \"function\" ? _d : Object])\r\n], PasswordResetInitComponent);\r\nexports.PasswordResetInitComponent = PasswordResetInitComponent;\r\n",{"version":3,"file":"C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\src\\main\\webapp\\app\\account\\password-reset\\init\\password-reset-init.component.ts","sourceRoot":"","sources":["C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\node_modules\\tslint-loader\\index.js!C:\\Users\\DankOverlord\\Desktop\\Jhipster40000000\\jhipster-test1\\src\\main\\webapp\\app\\account\\password-reset\\init\\password-reset-init.component.ts"],"names":[],"mappings":";;;;AAAA,wCAA+E;AAC/E,0CAAoE;AAEpE,uCAAkD;AAClD,+EAAyE;AAMzE,IAAa,0BAA0B,GAAvC,MAAa,0BAA0B;IAQrC,YACU,wBAAkD,EAClD,UAAsB,EACtB,QAAkB,EAClB,EAAe;QAHf,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,eAAU,GAAV,UAAU,CAAY;QACtB,aAAQ,GAAR,QAAQ,CAAU;QAClB,OAAE,GAAF,EAAE,CAAa;QARzB,qBAAgB,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,kBAAU,CAAC,QAAQ,EAAE,kBAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,kBAAU,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,kBAAU,CAAC,KAAK,CAAC,CAAC;SACzG,CAAC,CAAC;IAOA,CAAC;IAEJ,eAAe;QACb,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC;IACxG,CAAC;IAED,YAAY;QACV,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAEhC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,CACtF,GAAG,EAAE;YACH,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACtB,CAAC,EACD,QAAQ,CAAC,EAAE;YACT,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,6BAAoB,EAAE;gBAC3E,IAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC;aACpC;iBAAM;gBACL,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;aACtB;QACH,CAAC,CACF,CAAC;IACJ,CAAC;CACF,CAAA;AArCY,0BAA0B;IAJtC,gBAAS,CAAC;QACT,QAAQ,EAAE,yBAAyB;QACnC,WAAW,EAAE,sCAAsC;KACpD,CAAC;iEAUoC,sDAAwB,oBAAxB,sDAAwB,oDACtC,iBAAU,oBAAV,iBAAU,oDACZ,eAAQ,oBAAR,eAAQ,oDACd,mBAAW,oBAAX,mBAAW;GAZd,0BAA0B,CAqCtC;AArCY,gEAA0B","sourcesContent":["import { Component, AfterViewInit, Renderer, ElementRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { EMAIL_NOT_FOUND_TYPE } from 'app/shared';\r\nimport { PasswordResetInitService } from './password-reset-init.service';\r\n\r\n@Component({\r\n  selector: 'jhi-password-reset-init',\r\n  templateUrl: './password-reset-init.component.html'\r\n})\r\nexport class PasswordResetInitComponent implements AfterViewInit {\r\n  error: string;\r\n  errorEmailNotExists: string;\r\n  success: string;\r\n  resetRequestForm = this.fb.group({\r\n    email: ['', [Validators.required, Validators.minLength(5), Validators.maxLength(254), Validators.email]]\r\n  });\r\n\r\n  constructor(\r\n    private passwordResetInitService: PasswordResetInitService,\r\n    private elementRef: ElementRef,\r\n    private renderer: Renderer,\r\n    private fb: FormBuilder\r\n  ) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.renderer.invokeElementMethod(this.elementRef.nativeElement.querySelector('#email'), 'focus', []);\r\n  }\r\n\r\n  requestReset() {\r\n    this.error = null;\r\n    this.errorEmailNotExists = null;\r\n\r\n    this.passwordResetInitService.save(this.resetRequestForm.get(['email']).value).subscribe(\r\n      () => {\r\n        this.success = 'OK';\r\n      },\r\n      response => {\r\n        this.success = null;\r\n        if (response.status === 400 && response.error.type === EMAIL_NOT_FOUND_TYPE) {\r\n          this.errorEmailNotExists = 'ERROR';\r\n        } else {\r\n          this.error = 'ERROR';\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n"]}]}