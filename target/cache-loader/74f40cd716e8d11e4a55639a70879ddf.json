{"remainingRequest":"C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\tslint-loader\\index.js!C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\src\\main\\webapp\\app\\account\\settings\\settings.component.ts","dependencies":[{"path":"C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\src\\main\\webapp\\app\\account\\settings\\settings.component.ts","mtime":1559825299074},{"path":"C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\angular2-template-loader\\index.js","mtime":1559824741317},{"path":"C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1559824860230},{"path":"C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1559825261749},{"path":"C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\ts-loader\\index.js","mtime":1559825264809},{"path":"C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\angular-router-loader\\src\\index.js","mtime":1559824740677},{"path":"C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\tslint-loader\\index.js","mtime":1559825264989}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nvar _a, _b;\r\nconst core_1 = require(\"@angular/core\");\r\nconst forms_1 = require(\"@angular/forms\");\r\nconst core_2 = require(\"app/core\");\r\nlet SettingsComponent = class SettingsComponent {\r\n    constructor(accountService, fb) {\r\n        this.accountService = accountService;\r\n        this.fb = fb;\r\n        this.settingsForm = this.fb.group({\r\n            firstName: [undefined, [forms_1.Validators.required, forms_1.Validators.minLength(1), forms_1.Validators.maxLength(50)]],\r\n            lastName: [undefined, [forms_1.Validators.required, forms_1.Validators.minLength(1), forms_1.Validators.maxLength(50)]],\r\n            email: [undefined, [forms_1.Validators.required, forms_1.Validators.minLength(5), forms_1.Validators.maxLength(254), forms_1.Validators.email]],\r\n            activated: [false],\r\n            authorities: [[]],\r\n            langKey: ['en'],\r\n            login: [],\r\n            imageUrl: []\r\n        });\r\n    }\r\n    ngOnInit() {\r\n        this.accountService.identity().then(account => {\r\n            this.updateForm(account);\r\n        });\r\n    }\r\n    save() {\r\n        const settingsAccount = this.accountFromForm();\r\n        this.accountService.save(settingsAccount).subscribe(() => {\r\n            this.error = null;\r\n            this.success = 'OK';\r\n            this.accountService.identity(true).then(account => {\r\n                this.updateForm(account);\r\n            });\r\n        }, () => {\r\n            this.success = null;\r\n            this.error = 'ERROR';\r\n        });\r\n    }\r\n    accountFromForm() {\r\n        const account = {};\r\n        return Object.assign({}, account, { firstName: this.settingsForm.get('firstName').value, lastName: this.settingsForm.get('lastName').value, email: this.settingsForm.get('email').value, activated: this.settingsForm.get('activated').value, authorities: this.settingsForm.get('authorities').value, langKey: this.settingsForm.get('langKey').value, login: this.settingsForm.get('login').value, imageUrl: this.settingsForm.get('imageUrl').value });\r\n    }\r\n    updateForm(account) {\r\n        this.settingsForm.patchValue({\r\n            firstName: account.firstName,\r\n            lastName: account.lastName,\r\n            email: account.email,\r\n            activated: account.activated,\r\n            authorities: account.authorities,\r\n            langKey: account.langKey,\r\n            login: account.login,\r\n            imageUrl: account.imageUrl\r\n        });\r\n    }\r\n};\r\nSettingsComponent = tslib_1.__decorate([\r\n    core_1.Component({\r\n        selector: 'jhi-settings',\r\n        templateUrl: './settings.component.html'\r\n    }),\r\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof core_2.AccountService !== \"undefined\" && core_2.AccountService) === \"function\" ? _a : Object, typeof (_b = typeof forms_1.FormBuilder !== \"undefined\" && forms_1.FormBuilder) === \"function\" ? _b : Object])\r\n], SettingsComponent);\r\nexports.SettingsComponent = SettingsComponent;\r\n",{"version":3,"file":"C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\src\\main\\webapp\\app\\account\\settings\\settings.component.ts","sourceRoot":"","sources":["C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\tslint-loader\\index.js!C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\src\\main\\webapp\\app\\account\\settings\\settings.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\nimport { AccountService } from 'app/core';\r\nimport { Account } from 'app/core/user/account.model';\r\n\r\n@Component({\r\n  selector: 'jhi-settings',\r\n  templateUrl: './settings.component.html'\r\n})\r\nexport class SettingsComponent implements OnInit {\r\n  error: string;\r\n  success: string;\r\n  languages: any[];\r\n  settingsForm = this.fb.group({\r\n    firstName: [undefined, [Validators.required, Validators.minLength(1), Validators.maxLength(50)]],\r\n    lastName: [undefined, [Validators.required, Validators.minLength(1), Validators.maxLength(50)]],\r\n    email: [undefined, [Validators.required, Validators.minLength(5), Validators.maxLength(254), Validators.email]],\r\n    activated: [false],\r\n    authorities: [[]],\r\n    langKey: ['en'],\r\n    login: [],\r\n    imageUrl: []\r\n  });\r\n\r\n  constructor(private accountService: AccountService, private fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.accountService.identity().then(account => {\r\n      this.updateForm(account);\r\n    });\r\n  }\r\n\r\n  save() {\r\n    const settingsAccount = this.accountFromForm();\r\n    this.accountService.save(settingsAccount).subscribe(\r\n      () => {\r\n        this.error = null;\r\n        this.success = 'OK';\r\n        this.accountService.identity(true).then(account => {\r\n          this.updateForm(account);\r\n        });\r\n      },\r\n      () => {\r\n        this.success = null;\r\n        this.error = 'ERROR';\r\n      }\r\n    );\r\n  }\r\n\r\n  private accountFromForm(): any {\r\n    const account = {};\r\n    return {\r\n      ...account,\r\n      firstName: this.settingsForm.get('firstName').value,\r\n      lastName: this.settingsForm.get('lastName').value,\r\n      email: this.settingsForm.get('email').value,\r\n      activated: this.settingsForm.get('activated').value,\r\n      authorities: this.settingsForm.get('authorities').value,\r\n      langKey: this.settingsForm.get('langKey').value,\r\n      login: this.settingsForm.get('login').value,\r\n      imageUrl: this.settingsForm.get('imageUrl').value\r\n    };\r\n  }\r\n\r\n  updateForm(account: any): void {\r\n    this.settingsForm.patchValue({\r\n      firstName: account.firstName,\r\n      lastName: account.lastName,\r\n      email: account.email,\r\n      activated: account.activated,\r\n      authorities: account.authorities,\r\n      langKey: account.langKey,\r\n      login: account.login,\r\n      imageUrl: account.imageUrl\r\n    });\r\n  }\r\n}\r\n"]}]}