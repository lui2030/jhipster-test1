{"remainingRequest":"C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\tslint-loader\\index.js!C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\src\\main\\webapp\\app\\layouts\\profiles\\profile.service.ts","dependencies":[{"path":"C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\src\\main\\webapp\\app\\layouts\\profiles\\profile.service.ts","mtime":1559825299974},{"path":"C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\angular2-template-loader\\index.js","mtime":1559824741317},{"path":"C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1559824860230},{"path":"C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1559825261749},{"path":"C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\ts-loader\\index.js","mtime":1559825264809},{"path":"C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\angular-router-loader\\src\\index.js","mtime":1559824740677},{"path":"C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\tslint-loader\\index.js","mtime":1559825264989}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nvar _a;\r\nconst core_1 = require(\"@angular/core\");\r\nconst http_1 = require(\"@angular/common/http\");\r\nconst app_constants_1 = require(\"app/app.constants\");\r\nconst profile_info_model_1 = require(\"./profile-info.model\");\r\nconst operators_1 = require(\"rxjs/operators\");\r\nlet ProfileService = class ProfileService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        this.infoUrl = app_constants_1.SERVER_API_URL + 'management/info';\r\n    }\r\n    getProfileInfo() {\r\n        if (!this.profileInfo) {\r\n            this.profileInfo = this.http\r\n                .get(this.infoUrl, { observe: 'response' })\r\n                .pipe(operators_1.map((res) => {\r\n                const data = res.body;\r\n                const pi = new profile_info_model_1.ProfileInfo();\r\n                pi.activeProfiles = data['activeProfiles'];\r\n                const displayRibbonOnProfiles = data['display-ribbon-on-profiles'].split(',');\r\n                if (pi.activeProfiles) {\r\n                    const ribbonProfiles = displayRibbonOnProfiles.filter(profile => pi.activeProfiles.includes(profile));\r\n                    if (ribbonProfiles.length !== 0) {\r\n                        pi.ribbonEnv = ribbonProfiles[0];\r\n                    }\r\n                    pi.inProduction = pi.activeProfiles.includes('prod');\r\n                    pi.swaggerEnabled = pi.activeProfiles.includes('swagger');\r\n                }\r\n                return pi;\r\n            }))\r\n                .toPromise();\r\n        }\r\n        return this.profileInfo;\r\n    }\r\n};\r\nProfileService = tslib_1.__decorate([\r\n    core_1.Injectable({ providedIn: 'root' }),\r\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof http_1.HttpClient !== \"undefined\" && http_1.HttpClient) === \"function\" ? _a : Object])\r\n], ProfileService);\r\nexports.ProfileService = ProfileService;\r\n",{"version":3,"file":"C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\src\\main\\webapp\\app\\layouts\\profiles\\profile.service.ts","sourceRoot":"","sources":["C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\tslint-loader\\index.js!C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\src\\main\\webapp\\app\\layouts\\profiles\\profile.service.ts"],"names":[],"mappings":";;;;AAAA,wCAA2C;AAC3C,+CAAgE;AAEhE,qDAAmD;AACnD,6DAAmD;AACnD,8CAAqC;AAGrC,IAAa,cAAc,GAA3B,MAAa,cAAc;IAIzB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAH5B,YAAO,GAAG,8BAAc,GAAG,iBAAiB,CAAC;IAGd,CAAC;IAExC,cAAc;QACZ,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI;iBACzB,GAAG,CAAc,IAAI,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC;iBACvD,IAAI,CACH,eAAG,CAAC,CAAC,GAA8B,EAAE,EAAE;gBACrC,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;gBACtB,MAAM,EAAE,GAAG,IAAI,gCAAW,EAAE,CAAC;gBAC7B,EAAE,CAAC,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBAC3C,MAAM,uBAAuB,GAAG,IAAI,CAAC,4BAA4B,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAC9E,IAAI,EAAE,CAAC,cAAc,EAAE;oBACrB,MAAM,cAAc,GAAG,uBAAuB,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;oBACtG,IAAI,cAAc,CAAC,MAAM,KAAK,CAAC,EAAE;wBAC/B,EAAE,CAAC,SAAS,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC;qBAClC;oBACD,EAAE,CAAC,YAAY,GAAG,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;oBACrD,EAAE,CAAC,cAAc,GAAG,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;iBAC3D;gBACD,OAAO,EAAE,CAAC;YACZ,CAAC,CAAC,CACH;iBACA,SAAS,EAAE,CAAC;SAChB;QACD,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;CACF,CAAA;AA/BY,cAAc;IAD1B,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;iEAKP,iBAAU,oBAAV,iBAAU;GAJzB,cAAc,CA+B1B;AA/BY,wCAAc","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\n\r\nimport { SERVER_API_URL } from 'app/app.constants';\r\nimport { ProfileInfo } from './profile-info.model';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ProfileService {\r\n  private infoUrl = SERVER_API_URL + 'management/info';\r\n  private profileInfo: Promise<ProfileInfo>;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getProfileInfo(): Promise<ProfileInfo> {\r\n    if (!this.profileInfo) {\r\n      this.profileInfo = this.http\r\n        .get<ProfileInfo>(this.infoUrl, { observe: 'response' })\r\n        .pipe(\r\n          map((res: HttpResponse<ProfileInfo>) => {\r\n            const data = res.body;\r\n            const pi = new ProfileInfo();\r\n            pi.activeProfiles = data['activeProfiles'];\r\n            const displayRibbonOnProfiles = data['display-ribbon-on-profiles'].split(',');\r\n            if (pi.activeProfiles) {\r\n              const ribbonProfiles = displayRibbonOnProfiles.filter(profile => pi.activeProfiles.includes(profile));\r\n              if (ribbonProfiles.length !== 0) {\r\n                pi.ribbonEnv = ribbonProfiles[0];\r\n              }\r\n              pi.inProduction = pi.activeProfiles.includes('prod');\r\n              pi.swaggerEnabled = pi.activeProfiles.includes('swagger');\r\n            }\r\n            return pi;\r\n          })\r\n        )\r\n        .toPromise();\r\n    }\r\n    return this.profileInfo;\r\n  }\r\n}\r\n"]}]}