{"remainingRequest":"C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\thread-loader\\dist\\cjs.js??ref--9-2!C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\ts-loader\\index.js??ref--9-3!C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\tslint-loader\\index.js!C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\src\\main\\webapp\\app\\admin\\metrics\\metrics.component.ts","dependencies":[{"path":"C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\src\\main\\webapp\\app\\admin\\metrics\\metrics.component.ts","mtime":1559825299264},{"path":"C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\angular2-template-loader\\index.js","mtime":1559824741317},{"path":"C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1559824860230},{"path":"C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1559825261749},{"path":"C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\ts-loader\\index.js","mtime":1559825264809},{"path":"C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\angular-router-loader\\src\\index.js","mtime":1559824740677},{"path":"C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\tslint-loader\\index.js","mtime":1559825264989}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst tslib_1 = require(\"tslib\");\r\nvar _a, _b;\r\nconst core_1 = require(\"@angular/core\");\r\nconst ng_bootstrap_1 = require(\"@ng-bootstrap/ng-bootstrap\");\r\nconst metrics_service_1 = require(\"./metrics.service\");\r\nlet JhiMetricsMonitoringComponent = class JhiMetricsMonitoringComponent {\r\n    constructor(modalService, metricsService) {\r\n        this.modalService = modalService;\r\n        this.metricsService = metricsService;\r\n        this.metrics = {};\r\n        this.threadData = {};\r\n        this.updatingMetrics = true;\r\n        this.JCACHE_KEY = 'jcache.statistics';\r\n    }\r\n    ngOnInit() {\r\n        this.refresh();\r\n    }\r\n    refresh() {\r\n        this.updatingMetrics = true;\r\n        this.metricsService.getMetrics().subscribe(metrics => {\r\n            this.metrics = metrics;\r\n            this.metricsService.threadDump().subscribe(data => {\r\n                this.threadData = data.threads;\r\n                this.updatingMetrics = false;\r\n            });\r\n        });\r\n    }\r\n    isObjectExisting(metrics, key) {\r\n        return metrics && metrics[key];\r\n    }\r\n    isObjectExistingAndNotEmpty(metrics, key) {\r\n        return this.isObjectExisting(metrics, key) && JSON.stringify(metrics[key]) !== '{}';\r\n    }\r\n};\r\nJhiMetricsMonitoringComponent = tslib_1.__decorate([\r\n    core_1.Component({\r\n        selector: 'jhi-metrics',\r\n        templateUrl: './metrics.component.html'\r\n    }),\r\n    tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_bootstrap_1.NgbModal !== \"undefined\" && ng_bootstrap_1.NgbModal) === \"function\" ? _a : Object, typeof (_b = typeof metrics_service_1.JhiMetricsService !== \"undefined\" && metrics_service_1.JhiMetricsService) === \"function\" ? _b : Object])\r\n], JhiMetricsMonitoringComponent);\r\nexports.JhiMetricsMonitoringComponent = JhiMetricsMonitoringComponent;\r\n",{"version":3,"file":"C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\src\\main\\webapp\\app\\admin\\metrics\\metrics.component.ts","sourceRoot":"","sources":["C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\angular-router-loader\\src\\index.js!C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\node_modules\\tslint-loader\\index.js!C:\\Users\\luigi\\Desktop\\test19\\jhipster-test1\\src\\main\\webapp\\app\\admin\\metrics\\metrics.component.ts"],"names":[],"mappings":";;;;AAAA,wCAAkD;AAClD,6DAAsD;AAEtD,uDAAsD;AAMtD,IAAa,6BAA6B,GAA1C,MAAa,6BAA6B;IAMxC,YAAoB,YAAsB,EAAU,cAAiC;QAAjE,iBAAY,GAAZ,YAAY,CAAU;QAAU,mBAAc,GAAd,cAAc,CAAmB;QALrF,YAAO,GAAQ,EAAE,CAAC;QAClB,eAAU,GAAQ,EAAE,CAAC;QACrB,oBAAe,GAAG,IAAI,CAAC;QAIrB,IAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC;IACxC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,OAAO;QACL,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,EAAE;YACnD,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;gBAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC/B,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC/B,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB,CAAC,OAAY,EAAE,GAAW;QACxC,OAAO,OAAO,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAED,2BAA2B,CAAC,OAAY,EAAE,GAAW;QACnD,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC;IACtF,CAAC;CACF,CAAA;AAhCY,6BAA6B;IAJzC,gBAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,WAAW,EAAE,0BAA0B;KACxC,CAAC;iEAOkC,uBAAQ,oBAAR,uBAAQ,oDAA0B,mCAAiB,oBAAjB,mCAAiB;GAN1E,6BAA6B,CAgCzC;AAhCY,sEAA6B","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { JhiMetricsService } from './metrics.service';\r\n\r\n@Component({\r\n  selector: 'jhi-metrics',\r\n  templateUrl: './metrics.component.html'\r\n})\r\nexport class JhiMetricsMonitoringComponent implements OnInit {\r\n  metrics: any = {};\r\n  threadData: any = {};\r\n  updatingMetrics = true;\r\n  JCACHE_KEY: string;\r\n\r\n  constructor(private modalService: NgbModal, private metricsService: JhiMetricsService) {\r\n    this.JCACHE_KEY = 'jcache.statistics';\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.refresh();\r\n  }\r\n\r\n  refresh() {\r\n    this.updatingMetrics = true;\r\n    this.metricsService.getMetrics().subscribe(metrics => {\r\n      this.metrics = metrics;\r\n      this.metricsService.threadDump().subscribe(data => {\r\n        this.threadData = data.threads;\r\n        this.updatingMetrics = false;\r\n      });\r\n    });\r\n  }\r\n\r\n  isObjectExisting(metrics: any, key: string) {\r\n    return metrics && metrics[key];\r\n  }\r\n\r\n  isObjectExistingAndNotEmpty(metrics: any, key: string) {\r\n    return this.isObjectExisting(metrics, key) && JSON.stringify(metrics[key]) !== '{}';\r\n  }\r\n}\r\n"]}]}