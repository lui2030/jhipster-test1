2019-06-06 09:36:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Table "DATABASECHANGELOGLOCK" not found; SQL statement:
SELECT COUNT(*) FROM PUBLIC.DATABASECHANGELOGLOCK [42102-199]
2019-06-06 09:36:46 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "NOME_ID" not found; SQL statement:
INSERT INTO PUBLIC.skill(id, nome, livello, descrizione, nome_id) VALUES(?, ?, ?, ?, ?) [42122-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:451)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.table.Table.getColumn(Table.java:708)
	at org.h2.command.Parser.parseColumn(Parser.java:1377)
	at org.h2.command.Parser.parseColumnList(Parser.java:1362)
	at org.h2.command.Parser.parseInsertGivenTable(Parser.java:1731)
	at org.h2.command.Parser.parseInsert(Parser.java:1684)
	at org.h2.command.Parser.parsePrepared(Parser.java:891)
	at org.h2.command.Parser.parse(Parser.java:788)
	at org.h2.command.Parser.parse(Parser.java:760)
	at org.h2.command.Parser.prepareCommand(Parser.java:683)
	at org.h2.engine.Session.prepareLocal(Session.java:627)
	at org.h2.engine.Session.prepareCommand(Session.java:565)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1292)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:77)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:349)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.prepareStatement(JdbcConnection.java:318)
	at liquibase.database.PreparedStatementFactory.create(PreparedStatementFactory.java:28)
	at liquibase.statement.ExecutablePreparedStatementBase.execute(ExecutablePreparedStatementBase.java:79)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:115)
	at liquibase.database.AbstractJdbcDatabase.execute(AbstractJdbcDatabase.java:1229)
	at liquibase.database.AbstractJdbcDatabase.executeStatements(AbstractJdbcDatabase.java:1211)
	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:600)
	at liquibase.changelog.visitor.UpdateVisitor.visit(UpdateVisitor.java:53)
	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:83)
	at liquibase.Liquibase.update(Liquibase.java:202)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:100)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:80)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:68)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
2019-06-06 10:06:09 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "NOME_ID" not found; SQL statement:
INSERT INTO PUBLIC.skill(id, nome, livello, descrizione, nome_id) VALUES(?, ?, ?, ?, ?) [42122-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:451)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.table.Table.getColumn(Table.java:708)
	at org.h2.command.Parser.parseColumn(Parser.java:1377)
	at org.h2.command.Parser.parseColumnList(Parser.java:1362)
	at org.h2.command.Parser.parseInsertGivenTable(Parser.java:1731)
	at org.h2.command.Parser.parseInsert(Parser.java:1684)
	at org.h2.command.Parser.parsePrepared(Parser.java:891)
	at org.h2.command.Parser.parse(Parser.java:788)
	at org.h2.command.Parser.parse(Parser.java:760)
	at org.h2.command.Parser.prepareCommand(Parser.java:683)
	at org.h2.engine.Session.prepareLocal(Session.java:627)
	at org.h2.engine.Session.prepareCommand(Session.java:565)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1292)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:77)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:349)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.prepareStatement(JdbcConnection.java:318)
	at liquibase.database.PreparedStatementFactory.create(PreparedStatementFactory.java:28)
	at liquibase.statement.ExecutablePreparedStatementBase.execute(ExecutablePreparedStatementBase.java:79)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:115)
	at liquibase.database.AbstractJdbcDatabase.execute(AbstractJdbcDatabase.java:1229)
	at liquibase.database.AbstractJdbcDatabase.executeStatements(AbstractJdbcDatabase.java:1211)
	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:600)
	at liquibase.changelog.visitor.UpdateVisitor.visit(UpdateVisitor.java:53)
	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:83)
	at liquibase.Liquibase.update(Liquibase.java:202)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:100)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:80)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:68)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
2019-06-06 10:20:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "NOME_ID" not found; SQL statement:
INSERT INTO PUBLIC.skill(id, nome, livello, descrizione, nome_id) VALUES(?, ?, ?, ?, ?) [42122-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:451)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.table.Table.getColumn(Table.java:708)
	at org.h2.command.Parser.parseColumn(Parser.java:1377)
	at org.h2.command.Parser.parseColumnList(Parser.java:1362)
	at org.h2.command.Parser.parseInsertGivenTable(Parser.java:1731)
	at org.h2.command.Parser.parseInsert(Parser.java:1684)
	at org.h2.command.Parser.parsePrepared(Parser.java:891)
	at org.h2.command.Parser.parse(Parser.java:788)
	at org.h2.command.Parser.parse(Parser.java:760)
	at org.h2.command.Parser.prepareCommand(Parser.java:683)
	at org.h2.engine.Session.prepareLocal(Session.java:627)
	at org.h2.engine.Session.prepareCommand(Session.java:565)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1292)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:77)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:349)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.prepareStatement(JdbcConnection.java:318)
	at liquibase.database.PreparedStatementFactory.create(PreparedStatementFactory.java:28)
	at liquibase.statement.ExecutablePreparedStatementBase.execute(ExecutablePreparedStatementBase.java:79)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:115)
	at liquibase.database.AbstractJdbcDatabase.execute(AbstractJdbcDatabase.java:1229)
	at liquibase.database.AbstractJdbcDatabase.executeStatements(AbstractJdbcDatabase.java:1211)
	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:600)
	at liquibase.changelog.visitor.UpdateVisitor.visit(UpdateVisitor.java:53)
	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:83)
	at liquibase.Liquibase.update(Liquibase.java:202)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:100)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:80)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:68)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
2019-06-06 10:41:19 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "NOME_ID" not found; SQL statement:
INSERT INTO PUBLIC.skill(id, nome, livello, descrizione, nome_id) VALUES(?, ?, ?, ?, ?) [42122-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:451)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.table.Table.getColumn(Table.java:708)
	at org.h2.command.Parser.parseColumn(Parser.java:1377)
	at org.h2.command.Parser.parseColumnList(Parser.java:1362)
	at org.h2.command.Parser.parseInsertGivenTable(Parser.java:1731)
	at org.h2.command.Parser.parseInsert(Parser.java:1684)
	at org.h2.command.Parser.parsePrepared(Parser.java:891)
	at org.h2.command.Parser.parse(Parser.java:788)
	at org.h2.command.Parser.parse(Parser.java:760)
	at org.h2.command.Parser.prepareCommand(Parser.java:683)
	at org.h2.engine.Session.prepareLocal(Session.java:627)
	at org.h2.engine.Session.prepareCommand(Session.java:565)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1292)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:77)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:349)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.prepareStatement(JdbcConnection.java:318)
	at liquibase.database.PreparedStatementFactory.create(PreparedStatementFactory.java:28)
	at liquibase.statement.ExecutablePreparedStatementBase.execute(ExecutablePreparedStatementBase.java:79)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:115)
	at liquibase.database.AbstractJdbcDatabase.execute(AbstractJdbcDatabase.java:1229)
	at liquibase.database.AbstractJdbcDatabase.executeStatements(AbstractJdbcDatabase.java:1211)
	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:600)
	at liquibase.changelog.visitor.UpdateVisitor.visit(UpdateVisitor.java:53)
	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:83)
	at liquibase.Liquibase.update(Liquibase.java:202)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:100)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:80)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:68)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
2019-06-06 11:18:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "NOME_ID" not found; SQL statement:
INSERT INTO PUBLIC.skill(id, nome, livello, descrizione, nome_id) VALUES(?, ?, ?, ?, ?) [42122-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:451)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.table.Table.getColumn(Table.java:708)
	at org.h2.command.Parser.parseColumn(Parser.java:1377)
	at org.h2.command.Parser.parseColumnList(Parser.java:1362)
	at org.h2.command.Parser.parseInsertGivenTable(Parser.java:1731)
	at org.h2.command.Parser.parseInsert(Parser.java:1684)
	at org.h2.command.Parser.parsePrepared(Parser.java:891)
	at org.h2.command.Parser.parse(Parser.java:788)
	at org.h2.command.Parser.parse(Parser.java:760)
	at org.h2.command.Parser.prepareCommand(Parser.java:683)
	at org.h2.engine.Session.prepareLocal(Session.java:627)
	at org.h2.engine.Session.prepareCommand(Session.java:565)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1292)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:77)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:349)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.prepareStatement(JdbcConnection.java:318)
	at liquibase.database.PreparedStatementFactory.create(PreparedStatementFactory.java:28)
	at liquibase.statement.ExecutablePreparedStatementBase.execute(ExecutablePreparedStatementBase.java:79)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:115)
	at liquibase.database.AbstractJdbcDatabase.execute(AbstractJdbcDatabase.java:1229)
	at liquibase.database.AbstractJdbcDatabase.executeStatements(AbstractJdbcDatabase.java:1211)
	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:600)
	at liquibase.changelog.visitor.UpdateVisitor.visit(UpdateVisitor.java:53)
	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:83)
	at liquibase.Liquibase.update(Liquibase.java:202)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:100)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:80)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:68)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
2019-06-06 11:37:47 jdbc[13]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "NOME_ID" not found; SQL statement:
INSERT INTO PUBLIC.skill(id, nome, livello, descrizione, nome_id) VALUES(?, ?, ?, ?, ?) [42122-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:451)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.table.Table.getColumn(Table.java:708)
	at org.h2.command.Parser.parseColumn(Parser.java:1377)
	at org.h2.command.Parser.parseColumnList(Parser.java:1362)
	at org.h2.command.Parser.parseInsertGivenTable(Parser.java:1731)
	at org.h2.command.Parser.parseInsert(Parser.java:1684)
	at org.h2.command.Parser.parsePrepared(Parser.java:891)
	at org.h2.command.Parser.parse(Parser.java:788)
	at org.h2.command.Parser.parse(Parser.java:760)
	at org.h2.command.Parser.prepareCommand(Parser.java:683)
	at org.h2.engine.Session.prepareLocal(Session.java:627)
	at org.h2.engine.Session.prepareCommand(Session.java:565)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1292)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:77)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:349)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.prepareStatement(JdbcConnection.java:318)
	at liquibase.database.PreparedStatementFactory.create(PreparedStatementFactory.java:28)
	at liquibase.statement.ExecutablePreparedStatementBase.execute(ExecutablePreparedStatementBase.java:79)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:115)
	at liquibase.database.AbstractJdbcDatabase.execute(AbstractJdbcDatabase.java:1229)
	at liquibase.database.AbstractJdbcDatabase.executeStatements(AbstractJdbcDatabase.java:1211)
	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:600)
	at liquibase.changelog.visitor.UpdateVisitor.visit(UpdateVisitor.java:53)
	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:83)
	at liquibase.Liquibase.update(Liquibase.java:202)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:100)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:80)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:68)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
2019-06-06 11:40:10 jdbc[23]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "NOME_ID" not found; SQL statement:
INSERT INTO PUBLIC.skill(id, nome, livello, descrizione, nome_id) VALUES(?, ?, ?, ?, ?) [42122-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:451)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.table.Table.getColumn(Table.java:708)
	at org.h2.command.Parser.parseColumn(Parser.java:1377)
	at org.h2.command.Parser.parseColumnList(Parser.java:1362)
	at org.h2.command.Parser.parseInsertGivenTable(Parser.java:1731)
	at org.h2.command.Parser.parseInsert(Parser.java:1684)
	at org.h2.command.Parser.parsePrepared(Parser.java:891)
	at org.h2.command.Parser.parse(Parser.java:788)
	at org.h2.command.Parser.parse(Parser.java:760)
	at org.h2.command.Parser.prepareCommand(Parser.java:683)
	at org.h2.engine.Session.prepareLocal(Session.java:627)
	at org.h2.engine.Session.prepareCommand(Session.java:565)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1292)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:77)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:349)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.prepareStatement(JdbcConnection.java:318)
	at liquibase.database.PreparedStatementFactory.create(PreparedStatementFactory.java:28)
	at liquibase.statement.ExecutablePreparedStatementBase.execute(ExecutablePreparedStatementBase.java:79)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:115)
	at liquibase.database.AbstractJdbcDatabase.execute(AbstractJdbcDatabase.java:1229)
	at liquibase.database.AbstractJdbcDatabase.executeStatements(AbstractJdbcDatabase.java:1211)
	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:600)
	at liquibase.changelog.visitor.UpdateVisitor.visit(UpdateVisitor.java:53)
	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:83)
	at liquibase.Liquibase.update(Liquibase.java:202)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:100)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:80)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:68)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
2019-06-06 11:43:15 jdbc[33]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "NOME_ID" not found; SQL statement:
INSERT INTO PUBLIC.skill(id, nome, livello, descrizione, nome_id) VALUES(?, ?, ?, ?, ?) [42122-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:451)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.table.Table.getColumn(Table.java:708)
	at org.h2.command.Parser.parseColumn(Parser.java:1377)
	at org.h2.command.Parser.parseColumnList(Parser.java:1362)
	at org.h2.command.Parser.parseInsertGivenTable(Parser.java:1731)
	at org.h2.command.Parser.parseInsert(Parser.java:1684)
	at org.h2.command.Parser.parsePrepared(Parser.java:891)
	at org.h2.command.Parser.parse(Parser.java:788)
	at org.h2.command.Parser.parse(Parser.java:760)
	at org.h2.command.Parser.prepareCommand(Parser.java:683)
	at org.h2.engine.Session.prepareLocal(Session.java:627)
	at org.h2.engine.Session.prepareCommand(Session.java:565)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1292)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:77)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:349)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.prepareStatement(JdbcConnection.java:318)
	at liquibase.database.PreparedStatementFactory.create(PreparedStatementFactory.java:28)
	at liquibase.statement.ExecutablePreparedStatementBase.execute(ExecutablePreparedStatementBase.java:79)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:115)
	at liquibase.database.AbstractJdbcDatabase.execute(AbstractJdbcDatabase.java:1229)
	at liquibase.database.AbstractJdbcDatabase.executeStatements(AbstractJdbcDatabase.java:1211)
	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:600)
	at liquibase.changelog.visitor.UpdateVisitor.visit(UpdateVisitor.java:53)
	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:83)
	at liquibase.Liquibase.update(Liquibase.java:202)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:100)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:80)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:68)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
2019-06-06 11:53:23 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "NOME_ID" not found; SQL statement:
INSERT INTO PUBLIC.skill(id, nome, livello, descrizione, nome_id) VALUES(?, ?, ?, ?, ?) [42122-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:451)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.table.Table.getColumn(Table.java:708)
	at org.h2.command.Parser.parseColumn(Parser.java:1377)
	at org.h2.command.Parser.parseColumnList(Parser.java:1362)
	at org.h2.command.Parser.parseInsertGivenTable(Parser.java:1731)
	at org.h2.command.Parser.parseInsert(Parser.java:1684)
	at org.h2.command.Parser.parsePrepared(Parser.java:891)
	at org.h2.command.Parser.parse(Parser.java:788)
	at org.h2.command.Parser.parse(Parser.java:760)
	at org.h2.command.Parser.prepareCommand(Parser.java:683)
	at org.h2.engine.Session.prepareLocal(Session.java:627)
	at org.h2.engine.Session.prepareCommand(Session.java:565)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1292)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:77)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:349)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.prepareStatement(JdbcConnection.java:318)
	at liquibase.database.PreparedStatementFactory.create(PreparedStatementFactory.java:28)
	at liquibase.statement.ExecutablePreparedStatementBase.execute(ExecutablePreparedStatementBase.java:79)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:115)
	at liquibase.database.AbstractJdbcDatabase.execute(AbstractJdbcDatabase.java:1229)
	at liquibase.database.AbstractJdbcDatabase.executeStatements(AbstractJdbcDatabase.java:1211)
	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:600)
	at liquibase.changelog.visitor.UpdateVisitor.visit(UpdateVisitor.java:53)
	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:83)
	at liquibase.Liquibase.update(Liquibase.java:202)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:100)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:80)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:68)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
2019-06-06 12:14:57 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT DISTINCT DIPENDENTE0_.ID AS ID1_0_0_, SKILL2_.ID AS ID1_7_1_, DIPENDENTE0_.COGNOME AS COGNOME2_0_0_, DIPENDENTE0_.DATA_NASCITA AS DATA_NAS3_0_0_, DIPENDENTE0_.EMAIL AS EMAIL4_0_0_, DIPENDENTE0_.INDIRIZZO AS INDIRIZZ5_0_0_, DIPENDENTE0_.NAZIONALITA AS NAZIONAL6_0_0_, DIPENDENTE0_.NOME AS NOME7_0_0_, DIPENDENTE0_.NUMERO_TELEFONO AS NUMERO_T8_0_0_, SKILL2_.DESCRIZIONE AS DESCRIZI2_7_1_, SKILL2_.LIVELLO AS LIVELLO3_7_1_, SKILL2_.NOME AS NOME4_7_1_, SKILLS1_.DIPENDENTE_ID AS DIPENDEN1_1_0__, SKILLS1_.SKILL_ID AS SKILL_ID2_1_0__ FROM DIPENDENTE DIPENDENTE0_ LEFT OUTER JOIN DIPENDENTE_SKILL SKILLS1_ ON DIPENDENTE0_.ID=SKILLS1_.DIPENDENTE_ID LEFT OUTER JOIN SKILL SKILL2_ ON SKILLS1_.SKILL_ID=SKILL2_.ID CROSS JOIN DIPENDENTE_SKILL SKILLS3_, SKILL SKILL4_ WHERE DIPENDENTE0_.ID=SKILLS3_.DIPENDENTE_ID AND SKILLS3_.SKILL_ID=SKILL4_.ID ORDER BY .[*] ASC, DIPENDENTE0_.ID ASC "; expected "=, NOT, EXISTS, INTERSECTS"; SQL statement:
select distinct dipendente0_.id as id1_0_0_, skill2_.id as id1_7_1_, dipendente0_.cognome as cognome2_0_0_, dipendente0_.data_nascita as data_nas3_0_0_, dipendente0_.email as email4_0_0_, dipendente0_.indirizzo as indirizz5_0_0_, dipendente0_.nazionalita as nazional6_0_0_, dipendente0_.nome as nome7_0_0_, dipendente0_.numero_telefono as numero_t8_0_0_, skill2_.descrizione as descrizi2_7_1_, skill2_.livello as livello3_7_1_, skill2_.nome as nome4_7_1_, skills1_.dipendente_id as dipenden1_1_0__, skills1_.skill_id as skill_id2_1_0__ from dipendente dipendente0_ left outer join dipendente_skill skills1_ on dipendente0_.id=skills1_.dipendente_id left outer join skill skill2_ on skills1_.skill_id=skill2_.id cross join dipendente_skill skills3_, skill skill4_ where dipendente0_.id=skills3_.dipendente_id and skills3_.skill_id=skill4_.id order by . asc, dipendente0_.id asc [42001-199]
2019-06-06 12:15:14 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT DISTINCT DIPENDENTE0_.ID AS ID1_0_0_, SKILL2_.ID AS ID1_7_1_, DIPENDENTE0_.COGNOME AS COGNOME2_0_0_, DIPENDENTE0_.DATA_NASCITA AS DATA_NAS3_0_0_, DIPENDENTE0_.EMAIL AS EMAIL4_0_0_, DIPENDENTE0_.INDIRIZZO AS INDIRIZZ5_0_0_, DIPENDENTE0_.NAZIONALITA AS NAZIONAL6_0_0_, DIPENDENTE0_.NOME AS NOME7_0_0_, DIPENDENTE0_.NUMERO_TELEFONO AS NUMERO_T8_0_0_, SKILL2_.DESCRIZIONE AS DESCRIZI2_7_1_, SKILL2_.LIVELLO AS LIVELLO3_7_1_, SKILL2_.NOME AS NOME4_7_1_, SKILLS1_.DIPENDENTE_ID AS DIPENDEN1_1_0__, SKILLS1_.SKILL_ID AS SKILL_ID2_1_0__ FROM DIPENDENTE DIPENDENTE0_ LEFT OUTER JOIN DIPENDENTE_SKILL SKILLS1_ ON DIPENDENTE0_.ID=SKILLS1_.DIPENDENTE_ID LEFT OUTER JOIN SKILL SKILL2_ ON SKILLS1_.SKILL_ID=SKILL2_.ID CROSS JOIN DIPENDENTE_SKILL SKILLS3_, SKILL SKILL4_ WHERE DIPENDENTE0_.ID=SKILLS3_.DIPENDENTE_ID AND SKILLS3_.SKILL_ID=SKILL4_.ID ORDER BY .[*] ASC, DIPENDENTE0_.ID ASC "; expected "=, NOT, EXISTS, INTERSECTS"; SQL statement:
select distinct dipendente0_.id as id1_0_0_, skill2_.id as id1_7_1_, dipendente0_.cognome as cognome2_0_0_, dipendente0_.data_nascita as data_nas3_0_0_, dipendente0_.email as email4_0_0_, dipendente0_.indirizzo as indirizz5_0_0_, dipendente0_.nazionalita as nazional6_0_0_, dipendente0_.nome as nome7_0_0_, dipendente0_.numero_telefono as numero_t8_0_0_, skill2_.descrizione as descrizi2_7_1_, skill2_.livello as livello3_7_1_, skill2_.nome as nome4_7_1_, skills1_.dipendente_id as dipenden1_1_0__, skills1_.skill_id as skill_id2_1_0__ from dipendente dipendente0_ left outer join dipendente_skill skills1_ on dipendente0_.id=skills1_.dipendente_id left outer join skill skill2_ on skills1_.skill_id=skill2_.id cross join dipendente_skill skills3_, skill skill4_ where dipendente0_.id=skills3_.dipendente_id and skills3_.skill_id=skill4_.id order by . asc, dipendente0_.id asc [42001-199]
2019-06-06 12:45:00 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "NOME_ID" not found; SQL statement:
INSERT INTO PUBLIC.skill(id, nome, livello, descrizione, nome_id) VALUES(?, ?, ?, ?, ?) [42122-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:451)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.table.Table.getColumn(Table.java:708)
	at org.h2.command.Parser.parseColumn(Parser.java:1377)
	at org.h2.command.Parser.parseColumnList(Parser.java:1362)
	at org.h2.command.Parser.parseInsertGivenTable(Parser.java:1731)
	at org.h2.command.Parser.parseInsert(Parser.java:1684)
	at org.h2.command.Parser.parsePrepared(Parser.java:891)
	at org.h2.command.Parser.parse(Parser.java:788)
	at org.h2.command.Parser.parse(Parser.java:760)
	at org.h2.command.Parser.prepareCommand(Parser.java:683)
	at org.h2.engine.Session.prepareLocal(Session.java:627)
	at org.h2.engine.Session.prepareCommand(Session.java:565)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1292)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:77)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:349)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.prepareStatement(JdbcConnection.java:318)
	at liquibase.database.PreparedStatementFactory.create(PreparedStatementFactory.java:28)
	at liquibase.statement.ExecutablePreparedStatementBase.execute(ExecutablePreparedStatementBase.java:79)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:115)
	at liquibase.database.AbstractJdbcDatabase.execute(AbstractJdbcDatabase.java:1229)
	at liquibase.database.AbstractJdbcDatabase.executeStatements(AbstractJdbcDatabase.java:1211)
	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:600)
	at liquibase.changelog.visitor.UpdateVisitor.visit(UpdateVisitor.java:53)
	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:83)
	at liquibase.Liquibase.update(Liquibase.java:202)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:100)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:80)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:68)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
2019-06-06 12:49:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "NOME_ID" not found; SQL statement:
INSERT INTO PUBLIC.skill(id, nome, livello, descrizione, nome_id) VALUES(?, ?, ?, ?, ?) [42122-199]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:451)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:427)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.table.Table.getColumn(Table.java:708)
	at org.h2.command.Parser.parseColumn(Parser.java:1377)
	at org.h2.command.Parser.parseColumnList(Parser.java:1362)
	at org.h2.command.Parser.parseInsertGivenTable(Parser.java:1731)
	at org.h2.command.Parser.parseInsert(Parser.java:1684)
	at org.h2.command.Parser.parsePrepared(Parser.java:891)
	at org.h2.command.Parser.parse(Parser.java:788)
	at org.h2.command.Parser.parse(Parser.java:760)
	at org.h2.command.Parser.prepareCommand(Parser.java:683)
	at org.h2.engine.Session.prepareLocal(Session.java:627)
	at org.h2.engine.Session.prepareCommand(Session.java:565)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1292)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:77)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:349)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at liquibase.database.jvm.JdbcConnection.prepareStatement(JdbcConnection.java:318)
	at liquibase.database.PreparedStatementFactory.create(PreparedStatementFactory.java:28)
	at liquibase.statement.ExecutablePreparedStatementBase.execute(ExecutablePreparedStatementBase.java:79)
	at liquibase.executor.jvm.JdbcExecutor.execute(JdbcExecutor.java:115)
	at liquibase.database.AbstractJdbcDatabase.execute(AbstractJdbcDatabase.java:1229)
	at liquibase.database.AbstractJdbcDatabase.executeStatements(AbstractJdbcDatabase.java:1211)
	at liquibase.changelog.ChangeSet.execute(ChangeSet.java:600)
	at liquibase.changelog.visitor.UpdateVisitor.visit(UpdateVisitor.java:53)
	at liquibase.changelog.ChangeLogIterator.run(ChangeLogIterator.java:83)
	at liquibase.Liquibase.update(Liquibase.java:202)
	at liquibase.Liquibase.update(Liquibase.java:179)
	at liquibase.integration.spring.SpringLiquibase.performUpdate(SpringLiquibase.java:353)
	at liquibase.integration.spring.SpringLiquibase.afterPropertiesSet(SpringLiquibase.java:305)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.initDb(AsyncSpringLiquibase.java:100)
	at io.github.jhipster.config.liquibase.AsyncSpringLiquibase.lambda$afterPropertiesSet$0(AsyncSpringLiquibase.java:80)
	at io.github.jhipster.async.ExceptionHandlingAsyncTaskExecutor.lambda$createWrappedRunnable$1(ExceptionHandlingAsyncTaskExecutor.java:68)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
